apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'eclipse-wtp'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.h2database:h2:1.3.176"
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://credentials.github.io/repos/maven2/"
    }
    mavenCentral()
}

dependencies {
    compile 'org.glassfish.jersey.core:jersey-server:2.19'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.19'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.19'

    compile 'org.slf4j:slf4j-jdk14:1.7.12'
    compile 'commons-codec:commons-codec:1.10'
    compile 'org.irmacard.metrics:irma_metrics_common:0.1.0'

    // Database support
    gretty 'commons-dbcp:commons-dbcp:1.4'
    gretty 'com.h2database:h2:1.3.176'
    compile 'mysql:mysql-connector-java:5.1.27'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "junit:junit:4.11"
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:2.19'
}

org.h2.tools.Server tcpServer;
org.h2.tools.Server webServer;

gretty {
    contextConfigFile = file('src/test/resources/jetty-env.xml')
    scanInterval = 10
    onStart {
        tcpServer = org.h2.tools.Server.createTcpServer(null).start()
        webServer = org.h2.tools.Server.createWebServer(null).start()
    }
    onStop {
        tcpServer.stop()
        webServer.stop()
    }
}
